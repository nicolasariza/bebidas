{"version":3,"sources":["components/Header.js","context/CategoriasContext.js","context/RecetasContext.js","components/Formulario.js","context/ModalContext.js","components/Receta.js","components/ListaRecetas.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","setCategorias","useEffect","a","axios","get","respuesta","data","drinks","obtenerCategorias","Provider","value","children","RecetasContext","RecetasProvider","recetas","setRecetas","consultaAPI","setConsultaAPI","ingrediente","categoria","busqueda","buscarRecetas","url","obtenerRecetas","Formulario","useContext","setBusqueda","obtenerDatosFormulario","e","target","name","onSubmit","preventDefault","type","placeholder","onChange","map","key","strCategory","ModalContext","ModalProvider","idReceta","setIdReceta","infoReceta","setReceta","Axios","resultado","obtenerReceta","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","height","overflow","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Receta","receta","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","informacion","ingredientes","i","push","mostrarIngredientes","ListaRecetas","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a36a3ca3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header className=\"bg-alert\">\r\n            <h1>Busca recetas de bebidas</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n//Crear el context\r\n\r\nexport const CategoriasContext = createContext();\r\n\r\n// Provider donde se encuentran las funciones y el state\r\n\r\nconst CategoriasProvider = (props) => {\r\n  // Crear el state del context\r\n  const [categorias, setCategorias] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const obtenerCategorias = async () => {\r\n      const url = \"https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\";\r\n      const respuesta = await axios.get(url);\r\n      setCategorias(respuesta.data.drinks);\r\n    };\r\n\r\n    obtenerCategorias();\r\n  }, []);\r\n  return (\r\n    <CategoriasContext.Provider value={{categorias}}>{props.children}</CategoriasContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CategoriasProvider;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = (props) => {\r\n  const [recetas, setRecetas] = useState([]);\r\n\r\n  const [consultaAPI, setConsultaAPI] = useState(false);\r\n\r\n  const [busqueda, buscarRecetas] = useState({\r\n    ingrediente: \"\",\r\n    categoria: \"\",\r\n  });\r\n\r\n  const { ingrediente, categoria } = busqueda;\r\n  useEffect(() => {\r\n    const obtenerRecetas = async () => {\r\n      const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingrediente}&c=${categoria}`;\r\n      const respuesta = await axios.get(url);\r\n      setRecetas(respuesta.data.drinks);\r\n    };\r\n\r\n    if (consultaAPI) obtenerRecetas();\r\n  }, [busqueda]);\r\n  return (\r\n    <RecetasContext.Provider\r\n      value={{\r\n        recetas,\r\n        buscarRecetas,\r\n        setConsultaAPI,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </RecetasContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RecetasProvider;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { CategoriasContext } from \"../context/CategoriasContext\";\r\nimport { RecetasContext } from \"../context/RecetasContext\";\r\n\r\nconst Formulario = () => {\r\n  const { categorias } = useContext(CategoriasContext);\r\n\r\n  const { buscarRecetas, setConsultaAPI } = useContext(RecetasContext);\r\n\r\n  const [busqueda, setBusqueda] = useState({\r\n    ingrediente: \"\",\r\n    categoria: \"\",\r\n  });\r\n\r\n  const obtenerDatosFormulario = (e) => {\r\n    setBusqueda({\r\n      ...busqueda,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  return (\r\n    <form\r\n      className=\"col-12\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        buscarRecetas(busqueda);\r\n        setConsultaAPI(true);\r\n      }}\r\n    >\r\n      <fieldset className=\"text-center\">\r\n        <legend>Busca bebidas por categoría o ingrediente</legend>\r\n      </fieldset>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-md-4\">\r\n          <input\r\n            name=\"ingrediente\"\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Buscar por ingrediente\"\r\n            onChange={obtenerDatosFormulario}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"categoria\"\r\n            onChange={obtenerDatosFormulario}\r\n          >\r\n            <option value=\"\">--- Selecciona catergoría--</option>\r\n            {categorias.map((categoria) => (\r\n              <option key={categoria.strCategory} value={categoria.strCategory}>\r\n                {categoria.strCategory}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Buscar bebidas\"\r\n            className=\"btn btn-block btn-primary\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalProvider = (props) => {\r\n  //State del provider\r\n\r\n  const [idReceta, setIdReceta] = useState(null);\r\n\r\n  const [infoReceta, setReceta] = useState({});\r\n\r\n  // una vez que tengamos una receta llamar la api\r\n  useEffect(() => {\r\n    const obtenerReceta = async () => {\r\n      const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idReceta}`;\r\n      const resultado = await Axios.get(url);\r\n\r\n      setReceta(resultado.data.drinks[0]);\r\n    };\r\n    if (idReceta) obtenerReceta();\r\n  }, [idReceta]);\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        infoReceta,\r\n        setIdReceta,\r\n        setReceta,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { ModalContext } from \"../context/ModalContext\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    height: 600,\r\n    overflow:'scroll',\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst Receta = ({ receta }) => {\r\n  //Configuracion del modal de material - ui\r\n\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const { infoReceta, setIdReceta, setReceta } = useContext(ModalContext);\r\n\r\n  const mostrarIngredientes = (informacion) => {\r\n    let ingredientes = [];\r\n\r\n    for (let i = 1; i < 16; i++) {\r\n      if (informacion[`strIngredient${i}`]) {\r\n        ingredientes.push(\r\n          <li>\r\n            {informacion[`strIngredient${i}`]}\r\n            {informacion[`strMeasure${i}`]}\r\n          </li>\r\n        );\r\n      }\r\n    }\r\n\r\n    return ingredientes;\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-4 mb-3\">\r\n      <div className=\"card\">\r\n        <h2 className=\"card-header\">{receta.strDrink}</h2>\r\n        <img\r\n          className=\"card-img-top\"\r\n          src={receta.strDrinkThumb}\r\n          alt={`Imagen de ${receta.strDrink}`}\r\n        />\r\n        <div className=\"card-body\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primary\"\r\n            onClick={() => {\r\n              setIdReceta(receta.idDrink);\r\n              handleOpen();\r\n            }}\r\n          >\r\n            Ver receta\r\n          </button>\r\n          <Modal\r\n            open={open}\r\n            onClose={() => {\r\n              handleClose();\r\n              setIdReceta(null);\r\n              setReceta({});\r\n            }}\r\n          >\r\n            <div style={modalStyle} className={classes.paper}>\r\n              <h2>{infoReceta.strDrink}</h2>\r\n              <h3 className=\"mt-4\">Instrucciones</h3>\r\n              <p>{infoReceta.strInstructions}</p>\r\n              <img className=\"img-fluid my-4\" src={infoReceta.strDrinkThumb} />\r\n              <h3>Ingredientes y cantidades</h3>\r\n              <ul>{mostrarIngredientes(infoReceta)}</ul>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Receta;\r\n","import React, { useContext } from \"react\";\r\nimport { RecetasContext } from \"../context/RecetasContext\";\r\nimport Receta from \"./Receta\";\r\n\r\nconst ListaRecetas = () => {\r\n  const { recetas } = useContext(RecetasContext);\r\n\r\n  return (\r\n    <div className=\"row mt-5\">\r\n      {recetas.map((receta) => (\r\n        <Receta key={receta.idDrink} receta={receta} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListaRecetas;\r\n","import React, { Fragment } from \"react\";\nimport Header from \"./components/Header.js\";\nimport Formulario from \"./components/Formulario.js\";\nimport CategoriasProvider from \"./context/CategoriasContext.js\";\nimport RecetasProvider from \"./context/RecetasContext.js\";\nimport ListaRecetas from \"./components/ListaRecetas.js\";\nimport ModalProvider from \"./context/ModalContext.js\";\n\nfunction App() {\n  return (\n    <CategoriasProvider>\n      <RecetasProvider>\n        <ModalProvider>\n          <Header />\n          <div className=\"container mt-5\">\n            <div className=\"row\">\n              <Formulario />\n            </div>\n            <ListaRecetas />\n          </div>\n        </ModalProvider>\n      </RecetasProvider>\n    </CategoriasProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}